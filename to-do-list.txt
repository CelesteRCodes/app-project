create a new user, store new user information (created one new user 'soandso'; 
not sure if it's still working, tried with new data and user was not created)
(NOT GETTING ANY ERRORS, BUT NEW USERS ARE NOT BEING CREATED/STORED IN DB)

user-plants.html should show all the user's plants and have buttons to 
update each specific plant;
it should store all the plants added from new-plant.html 


figure out how to upload a photo, store it in database and display 
it on the grow-log.html in it's respective table


TESTS! (unit and integration tests)
unit tests can be docstrings
- added tests to CRUD.py


styling of pages (currently working on now)


ability to delete a grow log entry


make a README for project


NEW FORMS CREATED, BUTTONS WORK EXCEPT FOR 'add new plant' on new-plant.html 
and 'add new entry' on new-entry.html, geting a 404 (CLOSED, BUTTONS WORK - 4/19)


the upload photo submit button also takes user back 
to homepage (CLOSED, TAKES USER TO GROWLOG.HTML - 4/19)


log out button/function (DONE)


make sure that the info (commment at min) that user submits is actually 
stored in the db as a new entry 
(DONE)


display info from input-form.html on grow-log.html in tables
(DONE)


6 web pages in total:

1. homepage with login
    -'forgot password' button currently takes user back to homepage; 
    can add a retrieve password page in sprint 2
    -
# need to query into database for email given, if object with email, 
# grab password and compare it to password given

2. new-user.html register a new user, should add user's 
    info to db so login can check against it
    -submit button takes user back to login on homepage 

3. user-plants.html shows all the plants for that user
    -can also click on each plant to add a new entry to that plant's log
    -can also click on "add new plant" button to add a new plant

4. new-plant.html form to add a new plant to user's plants page
    -takes in plant name and plant type, adds it to the user-plants.html
    -once added to user-plant.html, a button is added that takes user 
        to new-entry.html to add a new grow log entry

5. new-entry.html form to add a new entry for a specific plant's grow login
    -can only get to this form by clicking on that specific plant; only used 
        to update that specific plants grow log

6. grow-log.html displays all the entries for that specific plant
    - has signout button that takes user back to homepage to log back in 
    
*it goes from user-plant.html, to new-entry.html (or new-plant.html first),
    then finally to grow-log.html for that specific plant




# API_KEY = os.environ['TICKETMASTER_KEY']

# # not sure I need an API for this part; 
# # using one to gather info from Trefle for references
# # for sprint 2 


# for user's plants page:
# that shows all of the user's plants (don't know how 
# to display inputted plants from user, maybe a dictionary?)

# each plant should be clickable, (could have a button under 
# plant or make the actual plant name a link for user)

# take user to the input new entry form for that 
# specific plant


<!-- <center><div id="all-plants">
        <table style="width:100%">
        <tr>
         
          <th>Plant Name</th>
          <th>Plant Type</th>
        </tr>
        
        {% for plants in all_plants %} 
        
        <tr>
          
          <td>{{ all_plants.plant_name }}</td>
          <td>{{ all_plants.plant_type }}</td>
        </tr> 
        
        {% endfor %}
        
        </table></center> -->
        
          <!-- </div> -->