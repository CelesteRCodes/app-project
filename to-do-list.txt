create a new user, store new user information (created one new user 'soandso'; 
not sure if it's still working, tried with new data and user was not created)
(NOT GETTING ANY ERRORS, BUT NEW USERS ARE NOT BEING CREATED/STORED IN DB)


make page that shows plant's specific grow log (one template, auto populate)
(DONE)

want to see:
master log (DONE)

log for specific plant 
update that log for specific plant (working on displaying data from new-entry.html)

on user-plant.html
2 links next to each plant, make a new entry, show me the logs for this plant
(DONE, links to add new plant is working, not show plant log)

how to upload a photo with each entry and display it on growlog.html? 
(DONE, added CLOUDINARY API)


how to add a delete button for user plants and growlog to delete plants/entries? 


how to clear log and user plants to start fresh? 
(RE-SEEDED DATABASE)

user-plants.html should show all the user's plants (DONE) 
and have buttons to update each specific plant's growlog (DONE)


figure out how to upload a photo, store it in database and display 
it on the grow-log.html in it's respective table (PENDING)


TESTS! (unit and integration tests)
unit tests can be docstrings
- added tests to CRUD.py
- need tests for model.py and seed.py


styling of pages (PENDING)


ability to delete a grow log entry/plant (PENDING)


make a README for project (PENDING)


NEW FORMS CREATED, BUTTONS WORK EXCEPT FOR 'add new plant' on new-plant.html 
and 'add new entry' on new-entry.html, geting a 404 (CLOSED, BUTTONS WORK - 4/19)
4/22: GETTING ERROR: TypeError: redirect() got an unexpected keyword argument 'plant'


the upload photo submit button also takes user back 
to homepage (CLOSED, TAKES USER TO GROWLOG.HTML - 4/19)


log out button/function (DONE)


make sure that the info (commment at min) that user submits is actually 
stored in the db as a new entry 
(DONE)


display info from input-form.html on grow-log.html in tables (master log)
(DONE)


7 web pages in total:

1. homepage with login (works for one added user, not sure if it's allowing new additions to user)
# need to query into database for email given, if object with email, 
# grab password and compare it to password given

2. forgot password page (still working on functionality with user info retrival)


3. new-user.html register a new user, should add user's 
    info to db so login can check against it (PENDING - checking if it'll add a new user)
    -submit button takes user back to login on homepage (DONE)

4. user-plants.html shows all the plants for that user
    -can also click on each plant to add a new entry to that plant's log (DONE)
    -can also click on "add new plant" button to add a new plant (DONE)

5. new-plant.html form to add a new plant to user's plants page
    -takes in plant name and plant type, adds it to the user-plants.html (DONE)
    -once added to user-plant.html, a button is added that takes user 
        to new-entry.html to add a new grow log entry (DONE)

6. new-entry.html form to add a new entry for a specific plant's grow login
    -can only get to this form by clicking on that specific plant; only used 
        to update that specific plants grow log (DONE)

7. grow-log.html displays all the entries for that specific plant
    - has signout button that takes user back to homepage to log back in (DONE)
    - should show all the plant info along with most recent photo 
    (PENDING - working on uploading/displaying photos)
    - looks like a master grow log

*it goes from user-plant.html, to new-entry.html (or new-plant.html first),
    then finally to grow-log.html for that specific plant


need to add a little AJAX to project


create new route, use variable parameter

    /plant_id/ or /plant_name/

@app.route('/post/<int:post_id>')
def show_post(post_id):
    """Show the post with the given id, the id is an integer."""

    return f'Blog post #{post_id}'

in user-plants.html
make a link tag, have end of url the route (/growlog/plant_id)
          these are jinja variables 
          can use end of url to query db for all logs of specific plant 
          it's a string by default, need to make it an int 

plant-details.html will be connected to user-plants.html, 
linked just like plant-log.html and new-entry.html
each page is specific for plant

need to add these functions to add-plant.html, CRUD.py and in route in server.py
    {{ plant.germinate_date }}
    add a text form to new-plant.html

    {{ plant.transplant_date }}
    add a text form to new-plant.html

    {{ plant.growing_medium }}
    drop down menu added to new-plant.html with options
    (container, specialty: dwc/rdwc/aqua/aero, raised bed, direct sow)

    {{ plant.directsow }}
    radio button(direct sow, transplant)
    
    {{plant.location}}
    radio button 
    (indoor, outdoor)

    {{ plant.environment }}
    drop down menu added to new-plant.html with options
    (indoor, grow tent/room, windowsill, outdoor, greenhouse)

    {{ plant.lighting }}
    drop down menu added to new-plant.html with options 
    (sunlight, fluorescent, LED, HPS, CFL)
can add lighting schedule and possible water schedule too



4/23:
no ajax needed

start adding bootstrap (layout/structure)
layoutit.com for bootstrap layout

more tests
different kinds of test, one of each

integration tests:
test GET with route and test POST with tearing down db/creating

unit tests
no need to test model.py

login is not tied to a specific user, all plants added to db show on user-plants.html



data from new-user and new-entry are not being stored or being accessed
check routes?
is it being saved in db?
problem entering or getting things out of db?
